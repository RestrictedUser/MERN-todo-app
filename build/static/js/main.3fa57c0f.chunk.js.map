{"version":3,"sources":["logo.svg","components/create-todo.component.js","components/edit-todo.component.js","components/todos-list.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CreateTodo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeTodoDescription","bind","assertThisInitialized","onChangeTodoResponsible","onChangeTodoPriority","onSubmit","state","todo_description","todo_responsible","todo_priority","todo_completed","e","setState","target","value","preventDefault","console","log","concat","newTodo","axios","post","then","res","data","react_default","a","createElement","style","marginTop","className","type","onChange","name","id","checked","Component","EditTodo","onChangeTodoCompleted","_this2","get","match","params","response","catch","error","obj","history","push","htmlFor","Todo","todo","Link","to","_id","TodosList","todos","_this3","map","currentTodo","i","todos_list_component_Todo","key","todoList","App","BrowserRouter","href","rel","src","logo","width","height","alt","Route","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fa57c0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateTodo extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        //binding objects\r\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\r\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\r\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            todo_description: '',\r\n            todo_responsible: '',\r\n            todo_priority: '',\r\n            todo_completed: false\r\n        }\r\n    }\r\n    // description value changes from current state to value of the event targets value\r\n    onChangeTodoDescription(e) {\r\n        this.setState({\r\n            todo_description: e.target.value\r\n        });\r\n    }\r\n// Responsible value changes from current state to value of the event targets value\r\n    onChangeTodoResponsible(e){\r\n        this.setState({\r\n            todo_responsible: e.target.value\r\n        });\r\n    }\r\n    // Priority value changes from current state to value of the event targets value\r\n    onChangeTodoPriority(e){\r\n        this.setState({\r\n            todo_priority: e.target.value\r\n        });\r\n    }\r\n    \r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        console.log(`Form Submitted:`);\r\n        console.log(`Todo Description: ${this.state.todo_description}`);\r\n        console.log(`Todo Responsible: ${this.state.todo_responsible}`);\r\n        console.log(`Todo Priority: ${this.state.todo_priority}`);\r\n        console.log(`Todo Completed: ${this.state.todo_completed}`);\r\n        console.log(\"--------------------------------------------------\")\r\n\r\n        // takes the information from the form input and sets the state = user input\r\n        const newTodo = {\r\n            todo_description: this.state.todo_description,\r\n            todo_responsible: this.state.todo_responsible,\r\n            todo_priority: this.state.todo_priority,\r\n            todo_completed: this.state.todo_completed\r\n        }\r\n       // send new data with newTodo obj to /add\r\n        axios.post('http://localhost:4000/todos/add', newTodo)\r\n            .then(res => console.log(res.data));\r\n        //after submit wipe the state so that the next todo is ready to be inputted\r\n        this.setState({\r\n            todo_description: '',\r\n            todo_responsible: '',\r\n            todo_priority: '',\r\n            todo_completed: false\r\n        })\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <div style={{marginTop: 20}}>\r\n                <h3>Create New Posting</h3>\r\n                {/* using onSubmit method for the form with onSubmit object we created */}\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Description</label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               value={this.state.todo_description}\r\n                               onChange={this.onChangeTodoDescription}\r\n                               />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>User</label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               value={this.state.todo_responsible}\r\n                               onChange={this.onChangeTodoResponsible}\r\n                               />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\"\r\n                                   type=\"radio\"\r\n                                   name=\"priorityOptions\"\r\n                                   id=\"priorityLow\"\r\n                                   value=\"Low\"\r\n                                   checked={this.state.todo_priority==='Low'} \r\n                                   onChange={this.onChangeTodoPriority}\r\n                                   />\r\n                            <label className=\"form-check-label\">Low</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\"\r\n                                   type=\"radio\"\r\n                                   name=\"priorityOptions\"\r\n                                   id=\"priorityMedium\"\r\n                                   value=\"Medium\"\r\n                                   checked={this.state.todo_priority==='Medium'} \r\n                                   onChange={this.onChangeTodoPriority}\r\n                                   />\r\n                            <label className=\"form-check-label\">Medium</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\"\r\n                                   type=\"radio\"\r\n                                   name=\"priorityOptions\"\r\n                                   id=\"priorityHigh\"\r\n                                   value=\"High\"\r\n                                   checked={this.state.todo_priority==='High'} \r\n                                   onChange={this.onChangeTodoPriority}\r\n                                   />\r\n                            <label className=\"form-check-label\">High</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Create ToDo\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default class EditTodo extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        // required to bind the functions to the constructor by doing the following ->\r\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\r\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\r\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\r\n        this.onChangeTodoCompleted = this.onChangeTodoCompleted.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        // this.deleteTodo = this.deleteTodo.bind(this);\r\n        \r\n        this.state = {\r\n            todo_description: '',\r\n            todo_responsible: '',\r\n            todo_priority: '',\r\n            todo_completed: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('http://localhost:4000/todos/' + this.props.match.params.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    todo_description: response.data.todo_description,\r\n                    todo_responsible: response.data.todo_responsible,\r\n                    todo_priority: response.data.todo_priority,\r\n                    todo_completed: response.data.todo_completed\r\n\r\n                })\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })     \r\n    }\r\n\r\n//     onHandleSubmit(e) {\r\n//         e.preventDefault();\r\n//         const obj = {\r\n//             todo_description: this.state.todo_description,\r\n//             todo_responsible: this.state.todo_responsible,\r\n//             todo_priority: this.state.todo_priority,\r\n//             todo_completed: this.state.todo_completed\r\n//         };\r\n//         this.props.onSearchTermChange(obj);\r\n//         this.setState({\r\n//             todo_description: '',\r\n//             todo_responsible: this.state.todo_responsible,\r\n//             todo_priority: this.state.todo_priority,\r\n//             todo_completed: this.state.todo_completed\r\n//        });\r\n//        axios.post('http://localhost:4000/todos/update/' + this.props.match.params.id, obj )\r\n//        .then(res => console.log(res.data));\r\n//    //allows you to push to the url history to navigate to a route\r\n//    this.props.history.push('/');\r\n//     }\r\n\r\n    onChangeTodoDescription(e){\r\n        this.setState({\r\n            todo_description: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoResponsible(e){\r\n        this.setState({\r\n            todo_responsible:e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoPriority(e){\r\n        this.setState({\r\n            todo_priority: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoCompleted(e) {\r\n        this.setState({\r\n            todo_completed: !this.state.todo_completed\r\n        });\r\n    }\r\n\r\n   \r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const obj = {\r\n            todo_description: this.state.todo_description,\r\n            todo_responsible: this.state.todo_responsible,\r\n            todo_priority: this.state.todo_priority,\r\n            todo_completed: this.state.todo_completed\r\n        };\r\n        axios.post('http://localhost:4000/todos/update/' + this.props.match.params.id, obj )\r\n            .then(res => console.log(res.data));\r\n        //allows you to push to the url history to navigate to a route\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"container\">\r\n                <h3>Update Posting</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Description</label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\" \r\n                               value={this.state.todo_description}\r\n                               onChange={this.onChangeTodoDescription}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Responsible</label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\" \r\n                               value={this.state.todo_responsible}\r\n                               onChange={this.onChangeTodoResponsible}\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\"\r\n                                   type=\"radio\"\r\n                                   name=\"priorityOptions\"\r\n                                   id=\"priorityLow\"\r\n                                   value=\"Low\"\r\n                                   checked={this.state.todo_priority==='Low'} \r\n                                   onChange={this.onChangeTodoPriority}\r\n                                   />\r\n                            <label className=\"form-check-label\">Low</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\"\r\n                                   type=\"radio\"\r\n                                   name=\"priorityOptions\"\r\n                                   id=\"priorityMedium\"\r\n                                   value=\"Medium\"\r\n                                   checked={this.state.todo_priority==='Medium'} \r\n                                   onChange={this.onChangeTodoPriority}\r\n                                   />\r\n                            <label className=\"form-check-label\">Medium</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\"\r\n                                   type=\"radio\"\r\n                                   name=\"priorityOptions\"\r\n                                   id=\"priorityHigh\"\r\n                                   value=\"High\"\r\n                                   checked={this.state.todo_priority==='High'} \r\n                                   onChange={this.onChangeTodoPriority}\r\n                                   />\r\n                            <label className=\"form-check-label\">High</label>\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                            <input  type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id=\"completedCheckbox\"\r\n                                    name=\"completedCheckbox\"\r\n                                    onChange={this.onChangeTodoCompleted}\r\n                                    checked={this.state.todo_completed}\r\n                                    value={this.state.todo_completed}\r\n                                    />\r\n                            <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\r\n                                Completed\r\n                            </label>\r\n                        </div>\r\n                        <br/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Update Todo\" className=\"btn btn-primary\" />\r\n                        \r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Todo = props => (\r\n    <tr>\r\n        <td className={props.todo.todo_completed ? 'completed': ''} >{props.todo.todo_description}</td>\r\n        <td className={props.todo.todo_completed ? 'completed': ''} >{props.todo.todo_responsible}</td>\r\n        <td className={props.todo.todo_completed ? 'completed': ''} >{props.todo.todo_priority}</td>\r\n        <td>\r\n            <Link to={\"/edit/\" + props.todo._id}>Edit</Link>\r\n        </td>\r\n        <td>\r\n            <Link to={\"/delete\" + props.todo._id}>Delete</Link>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default class TodosList extends Component {\r\n// get parent components?\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {todos: []};\r\n    }\r\n// once data loads from todos database send to todos route then setState todos = response.data from db\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/todos/')\r\n            .then(response => {\r\n                this.setState({todos: response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n    // because componDidMount only fires once we can use componentDidUpdate to update the page after every get/post/put\r\n    componentDidUpdate() {\r\n        axios.get('http://localhost:4000/todos/')\r\n        .then(response => {\r\n            this.setState({todos: response.data});\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })   \r\n    }\r\n\r\n\r\n// loops through the array data and performs a function on each index returning the Todo component with the data from the currentTodo index with a key = its index\r\n    todoList(){\r\n        return this.state.todos.map(function(currentTodo, i) {\r\n            return <Todo todo={currentTodo} key={i} />\r\n        });\r\n    }\r\n// display a table with headings\r\n    render () {\r\n        return (\r\n            <div className=\"container\">\r\n                <h3>Todos List</h3>\r\n                <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Description</th>\r\n                            <th>Responsible</th>\r\n                            <th>Priority</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {/* fill tbody with data returned from todoList which maps through the array of data from mongodb todos */}\r\n                        { this.todoList() }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  ","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n// allows to use bootstrap classes in react\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// COMPONENTS IMPORTS\nimport CreateTodo from \"./components/create-todo.component\";\nimport EditTodo from \"./components/edit-todo.component\";\nimport TodosList from \"./components/todos-list.component\";\n\nimport logo from \"./logo.svg\";\n\n\nclass App extends Component {\n  render() {\n    return (\n    <Router>\n      <div className=\"container\">\n\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a className=\"navbar-brand\"  href=\"https://github.com/RestrictedUser\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={logo} width=\"30\" height=\"30\" alt=\"my github\" />\n          </a>\n          <Link to=\"/\" className=\"navbar-brand\">MERN-Stack Project</Link>\n          <div className=\"collapse navbar-collapse\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"navbar-item\">\n                <Link to=\"/\" className=\"nav-link\">Job Postings</Link>\n              </li>\n              <li className=\"navbar-item\">\n                <Link to=\"/create\" className=\"nav-link\">Create Posting</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n\n        <h2 className=\"text-center\">MERN-Stack Project</h2>\n        <Route path=\"/\" exact component={TodosList} />\n        <Route path=\"/edit/:id\" exact component={EditTodo} />\n        <Route path=\"/create\" component={CreateTodo} />\n        <Route path=\"/delete/:id\" exact component={TodosList} />\n      </div>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}